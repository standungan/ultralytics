# YOLO11n with BiFPN feature pyramid
# Purpose: replace the PANet aggregation in YOLO11n with a lightweight BiFPN neck

nc: 3  # number of classes (update to match your dataset)
scales:
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# ubah backbone menjadi lebih ringan 
# dengan mengganti convolution yang lebih ringan
# GhostConv atau DWConv bisa dipertimbangkan

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]     # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]]    # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]]    # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]]    # 5-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]]   # 7-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]      # 9
  - [-1, 2, C2PSA, [1024]]        # 10

# ===============================
# ðŸŽ¯ HEAD
# ===============================
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 11
  - [[-1, 6], 1, BiFPN_Concat2, [1]]            # 12 cat backbone P4
  - [-1, 2, C3k2, [512, False]]                 # 13 (P4/16)
  - [-1, 1, CBAM,[128]]                         # 14 Apply CBAM on P4 feature map

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 15
  - [[-1, 4], 1, BiFPN_Concat2, [1]]            # 16 cat backbone P3
  - [-1, 2, C3k2, [256, False]]                 # 17 (P3/8)
  - [-1, 1, CBAM, [64]]                         # 18 Apply CBAM on P3 feature map

  - [-1, 1, Conv, [256, 3, 2]]                  # 19
  - [[-1, 13], 1, BiFPN_Concat2, [1]]           # 20 cat head P4
  - [-1, 2, C3k2, [512, False]]                 # 21 (P4/16)
  - [-1, 1, CBAM, [128]]                        # 22 CBAM on P4/16

  - [-1, 1, Conv, [512, 3, 2]]                  # 23  
  - [[-1, 10], 1, BiFPN_Concat2, [1]]           # 24 cat head P5
  - [-1, 2, C3k2, [1024, True]]                 # 25 (P5/32)
  - [-1, 1, CBAM, [256]]                        # 26 CBAM on P5/32
 
  - [[18, 22, 26], 1, Detect, [nc]]             # Detect(P2, P3, P4, P5) 

