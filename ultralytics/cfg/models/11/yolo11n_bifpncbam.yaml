# yolo11n_cbam.yaml
# YOLO11 nano with CBAM inserted at key backbone stages and on P3/P4/P5 before Detect.
# NOTE: width_multiple=0.25, so CBAM channels are scaled: 256->64, 512->128, 768->192.

nc: 3
depth_multiple: 0.33
width_multiple: 0.25

backbone:
  - [-1, 1, Conv, [64, 3, 2]]             # 0  P1/2         -> 64
  - [-1, 1, Conv, [128, 3, 2]]            # 1  P2/4         -> 32 (after width scaling of later blocks)

  - [-1, 3, C2f,  [128, True]]            # 2
  - [-1, 1, Conv, [256, 3, 2]]            # 3  P3/8         -> 64
  - [-1, 6, C2f,  [256, True]]            # 4  out=256 -> 64 after width
  - [-1, 1, CBAM, [64]]                   # 5  CBAM on C3 (scaled from 256)

  - [-1, 1, Conv, [512, 3, 2]]            # 6  P4/16        -> 128
  - [-1, 6, C2f,  [512, True]]            # 7  out=512 -> 128
  - [-1, 1, CBAM, [128]]                  # 8  CBAM on C4 (scaled from 512)

  - [-1, 1, Conv, [768, 3, 2]]            # 9  P5/32        -> 192
  - [-1, 2, C2f,  [768, True]]            # 10 out=768 -> 192
  - [-1, 1, CBAM, [192]]                  # 11 CBAM on C5 (scaled from 768)
  - [-1, 1, SPPF, [768, 5]]               # 12 P5 SPPF      -> 192
  - [-1, 1, CBAM, [192]]                  # 13 CBAM after SPPF (scaled)

head:
  # Top-down path
  - [-1,       1, Conv,        [512, 1, 1]]           # 14 P5 reduce -> 128 after width
  - [-1,       1, nn.Upsample, [None, 2, 'nearest']]  # 15
  - [[-1, 8],  1, Concat,      [1]]                   # 16 P4 cat (use CBAM’d C4 @ idx 8)
  - [-1,       2, C2f,         [512]]                 # 17 P4td -> 128
  
  - [-1,       1, Conv,        [256, 1, 1]]           # 18 -> 64
  - [-1,       1, nn.Upsample, [None, 2, 'nearest']]  # 19
  - [[-1, 5],  1, Concat,      [1]]                   # 20 P3 cat (use CBAM’d C3 @ idx 5)
  - [-1,       2, C2f,         [256]]                 # 21 P3td -> 64

  # Bottom-up (stage 1)
  - [-1,       1, Conv,        [256, 3, 2]]           # 22 -> P4 (64)
  - [[-1,17],  1, Concat,      [1]]                   # 23 fuse P4
  - [-1,       2, C2f,         [512]]                 # 24 P4bu -> 128

  - [-1,       1, Conv,        [512, 3, 2]]           # 25 -> P5 (128)
  - [[-1,14],  1, Concat,      [1]]                   # 26 fuse P5 (with P5 reduce @ 14)
  - [-1,       2, C2f,         [768]]                 # 27 P5bu -> 192

  # Extra mixing (BiFPN-like light)
  - [27,       1, Conv,        [512, 1, 1]]           # 28 -> 128
  - [-1,       1, nn.Upsample, [None, 2, 'nearest']]  # 29
  - [[-1,24],  1, Concat,      [1]]                   # 30 mix P4
  - [-1,       1, Conv,        [512, 1, 1]]           # 31 compress -> 128
  - [-1,       1, Conv,        [512, 3, 1]]           # 32 refine   -> 128

  - [32,       1, Conv,        [256, 1, 1]]           # 33 -> 64
  - [-1,       1, nn.Upsample, [None, 2, 'nearest']]  # 34
  - [[-1,21],  1, Concat,      [1]]                   # 35 mix P3
  - [-1,       1, Conv,        [256, 1, 1]]           # 36 compress -> 64
  - [-1,       1, Conv,        [256, 3, 1]]           # 37 refine   -> 64 (P3 map)

  # CBAM on maps that feed Detect (use scaled channels)
  - [37,       1, CBAM,        [64]]                  # 38 P3*
  - [32,       1, CBAM,        [128]]                 # 39 P4*
  - [27,       1, CBAM,        [192]]                 # 40 P5*

  # Taps (optional clarity)
  - [38,       1, nn.Identity, []]                    # 41 P3 tap
  - [39,       1, nn.Identity, []]                    # 42 P4 tap
  - [40,       1, nn.Identity, []]                    # 43 P5 tap

  # Detect head
  - [[41,42,43], 1, Detect,    [nc]]                  # Detect(P3,P4,P5)
